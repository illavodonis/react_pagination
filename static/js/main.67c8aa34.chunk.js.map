{"version":3,"sources":["Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","onInputSetTotal","onPerPageChange","length","Math","ceil","pages","Array","from","keys","slice","className","min","type","onClick","disabled","map","num","classNames","id","onChange","e","target","value","htmlFor","name","App","useState","setTotal","setPerPage","setPage","ReactDOM","render","document","getElementById"],"mappings":"4LAaaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,gBAEMC,EAASC,KAAKC,KAAKR,EAAQC,GAC3BQ,EAAQC,MAAMC,KAAKD,MAAMJ,EAAS,GAAGM,QAAQC,MAAM,GAEzD,OACE,qCACE,oBAAIC,UAAU,cAAd,mBACMb,GAAWC,EAAO,GAAK,EAD7B,cACoCK,KAAKQ,IAAIf,EAAOC,EAAUC,GAD9D,eAC0EF,KAE1E,qBAAIc,UAAU,kCAAd,UACE,oBAAIA,UAAU,YAAd,SACE,wBACEE,KAAK,SACLF,UAAU,YACVG,QAAS,kBAAMd,EAAaD,EAAO,IACnCgB,SAAmB,IAAThB,EAJZ,oBASDO,EAAMU,KAAI,SAAAC,GACT,OACE,oBAAIN,UAAU,YAAd,SACE,wBACEE,KAAK,SACLF,UAAWO,IAAW,MAAO,CAAE,cAAenB,IAASkB,IACvDH,QAAS,kBAAMd,EAAaiB,IAH9B,SAKGA,KAN0BA,MAWnC,oBAAIN,UAAU,YAAd,SACE,wBACEE,KAAK,SACLF,UAAU,YACVG,QAAS,kBAAMd,EAAaD,EAAO,IACnCgB,SAAUhB,IAASI,EAJrB,uBAWJ,sBAAKQ,UAAU,gEAAf,UAOE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAmBQ,GAAG,eAAtC,mCAIF,uBACEN,KAAK,SACLO,SAAU,SAACC,GACTpB,GAAiBoB,EAAEC,OAAOC,QAE5BZ,UAAU,eACVQ,GAAG,aAIP,sBAAKR,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBACEA,UAAU,mBACVa,QAAQ,qBAFV,4BAOF,yBACEb,UAAU,gBACVQ,GAAG,qBACHM,KAAK,UACLL,SAAU,SAACC,GAAD,OAAOnB,GAAiBmB,EAAEC,OAAOC,QAC3CA,MAAOzB,EALT,UAOE,wBAAQyB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,6BClEGG,EArCO,WACpB,MAA0BC,mBAAS,IAAnC,mBAAO9B,EAAP,KAAc+B,EAAd,KACA,EAA8BD,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB+B,EAAhB,KACA,EAAwBF,mBAAS,GAAjC,mBAAO5B,EAAP,KAAa+B,EAAb,KAoBA,OACE,8BACE,cAAC,EAAD,CACEjC,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aAxBe,SAACiB,GACpBa,EAAQb,IAwBJhB,gBArBkB,SAACgB,GAOvBW,EANKX,GACM,KAoBPf,gBAZkB,SAACe,GACvBY,EAAWZ,SCrBfc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.67c8aa34.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.css';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange:(num: number) => void;\n  onInputSetTotal: (num: number) => void;\n  onPerPageChange: (num: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n  onInputSetTotal,\n  onPerPageChange,\n}) => {\n  const length = Math.ceil(total / perPage);\n  const pages = Array.from(Array(length + 1).keys()).slice(1);\n\n  return (\n    <>\n      <h1 className=\"text-center\">\n        {`${perPage * (page - 1) + 1} - ${Math.min(total, perPage * page)} of ${total}`}\n      </h1>\n      <ul className=\"nav justify-content-center mb-3\">\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            onClick={() => onPageChange(page - 1)}\n            disabled={page === 1}\n          >\n            «\n          </button>\n        </li>\n        {pages.map(num => {\n          return (\n            <li className=\"page-item\" key={num}>\n              <button\n                type=\"button\"\n                className={classNames('btn', { 'btn-primary': page === num })}\n                onClick={() => onPageChange(num)}\n              >\n                {num}\n              </button>\n            </li>\n          );\n        })}\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            onClick={() => onPageChange(page + 1)}\n            disabled={page === length}\n          >\n            »\n          </button>\n        </li>\n      </ul>\n\n      <div className=\"\n        d-flex\n        align-items-center\n        flex-column\n        justify-content-center\"\n      >\n\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"basic-addon1\">\n              Total item is equal\n            </span>\n          </div>\n          <input\n            type=\"number\"\n            onChange={(e) => {\n              onInputSetTotal(+e.target.value);\n            }}\n            className=\"form-control\"\n            id=\"total\"\n          />\n        </div>\n\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label\n              className=\"input-group-text\"\n              htmlFor=\"inputGroupSelect01\"\n            >\n              Item on Page\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            id=\"inputGroupSelect01\"\n            name=\"perPage\"\n            onChange={(e) => onPerPageChange(+e.target.value)}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n      </div>\n    </>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './Pagination';\n\nconst App: React.FC = () => {\n  const [total, setTotal] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const onPageChange = (num:number): void => {\n    setPage(num);\n  };\n\n  const onInputSetTotal = (num:number): void => {\n    if (!num) {\n      setTotal(42);\n\n      return;\n    }\n\n    setTotal(num);\n  };\n\n  const onPerPageChange = (num:number): void => {\n    setPerPage(num);\n  };\n\n  return (\n    <nav>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        page={page}\n        onPageChange={onPageChange}\n        onInputSetTotal={onInputSetTotal}\n        onPerPageChange={onPerPageChange}\n      />\n    </nav>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}